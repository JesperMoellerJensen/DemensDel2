// <auto-generated />
using System;
using DemensDel2API.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DemensDel2API.Migrations
{
    [DbContext(typeof(DemensDbContext))]
    partial class DemensDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DemensDel2.Models.Exercise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Effort");

                    b.Property<double>("ExecutionRate");

                    b.Property<long?>("ExerciseTypeId");

                    b.Property<int>("PaintLevel");

                    b.Property<long?>("TrainingSessionId");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseTypeId");

                    b.HasIndex("TrainingSessionId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("DemensDel2.Models.ExerciseType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("Difficulty");

                    b.Property<float>("Duration");

                    b.Property<string>("MuscleGroup");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ExerciseTypes");
                });

            modelBuilder.Entity("DemensDel2.Models.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("UserForeignKey");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DemensDel2.Models.TrainingSession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<long?>("LogId");

                    b.HasKey("Id");

                    b.HasIndex("LogId");

                    b.ToTable("TrainingSessions");
                });

            modelBuilder.Entity("DemensDel2.Models.User", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("Address");

                    b.Property<int>("Age");

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<int>("TelephoneNumber");

                    b.Property<string>("UserIdentityID");

                    b.Property<int>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DemensDel2.Models.Exercise", b =>
                {
                    b.HasOne("DemensDel2.Models.ExerciseType", "ExerciseType")
                        .WithMany()
                        .HasForeignKey("ExerciseTypeId");

                    b.HasOne("DemensDel2.Models.TrainingSession", "TrainingSession")
                        .WithMany("Exercises")
                        .HasForeignKey("TrainingSessionId");
                });

            modelBuilder.Entity("DemensDel2.Models.TrainingSession", b =>
                {
                    b.HasOne("DemensDel2.Models.Log", "Log")
                        .WithMany("TrainingSessions")
                        .HasForeignKey("LogId");
                });

            modelBuilder.Entity("DemensDel2.Models.User", b =>
                {
                    b.HasOne("DemensDel2.Models.Log", "Log")
                        .WithOne("User")
                        .HasForeignKey("DemensDel2.Models.User", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
